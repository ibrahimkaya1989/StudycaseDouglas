
# Extra logging related to initialization of Log4j
# Set to debug or trace if log4j initialization is failing
status = warn
# Name of the configuration
name = PropertiesConfig

# Properties for Logger
property.filename = logs
property.timeformat = yyyy-MM-dd HH:mm:ss.SSS
property.timeformat_tr = dd-MM-yyyy HH:mm:ss.SSS
property.log = | %c{1}:%L - %msg%n
property.log_default = [%t] %c{1}:%L - %msg%n

# Appenders in row
appenders = console, file

# Console appender configuration
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level] %d{${timeformat}} ${log}

# File appender configuration
appender.file.type = File
appender.file.name = fileLogger
appender.file.fileName = ${filename}/console.log
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = [%-5level] %d{${timeformat}} ${log}
appender.file.append = false

# logger options: ALL -> DEBUG -> INFO -> WARN -> ERROR -> FATAL -> OFF
# Loggers in a row
loggers = framework, utils, listeners, stepdefs

# Logger framework configuration
logger.framework.name = framework
logger.framework.level = debug
logger.framework.appenderRefs = file
logger.framework.appenderRef.file.ref = fileLogger

# Logger utils configuration
logger.utils.name = utils
logger.utils.level = debug
logger.utils.appenderRefs = file
logger.utils.appenderRef.file.ref = fileLogger

# Logger listener configuration
logger.listeners.name = listeners
logger.listeners.level = debug
logger.listeners.appenderRefs = file
logger.listeners.appenderRef.file.ref = fileLogger

# Logger Stepdef configuration
logger.stepdefs.name = stepdefs
logger.stepdefs.level = debug
logger.stepdefs.appenderRefs = file
logger.stepdefs.appenderRef.file.ref = fileLogger

# Root logger level
rootLogger.level = error
# Root logger referring to console appender
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = consoleLogger